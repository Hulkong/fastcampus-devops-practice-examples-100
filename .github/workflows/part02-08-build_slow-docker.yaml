# Here's a breakdown of what it does:

#   It triggers manually using the workflow_dispatch event.
#   It runs the jobs on the latest version of Ubuntu.
#   It uses a matrix strategy to test against a single version of Node.js (14.x).
#   It checks out your repository using actions/checkout@v2.
#   It installs dependencies without caching them, which means it will download all dependencies every time it runs, slowing down the workflow.
#   It runs tests and builds in separate steps, which can be slower than running them in parallel or in a single step.
#   It doesn't build or push a Docker image, which could be part of a more efficient workflow if your application is containerized.
#   If you want to make this workflow more efficient, you could cache dependencies, run tests and builds in parallel or in a single step, and build and push a Docker image if applicable.

name: Node.js CI(느린 예시)-test

on:
  workflow_dispatch:
    inputs:
      imageVersion:
        description: 'Image Version'
        required: true
        default: 'latest'

defaults:
  run:
    working-directory: '02-강의준비/08-실무미션'
        
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          # context: '02-강의준비/08-실무미션'
          file: '02-강의준비/08-실무미션/Dockerfile'
          platforms: linux/amd64,linux/arm64
          push: true
          tags: hulkong/fastcampus-devops-practice-examples-100:part02-08-senario-${{ github.event.inputs.imageVersion }}